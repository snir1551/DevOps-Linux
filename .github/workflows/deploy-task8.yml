name: Deploy to Azure VM Task8

on:
  workflow_dispatch:
  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE_TASK8 }}" > week8/week8_summery/app/.env

      - name: Clean Docker on VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VM_HOST }} "
            echo 'Cleaning Docker environment...'

            containers=\$(docker ps -q)
            if [ -n \"\$containers\" ]; then
              echo 'Stopping running containers...'
              docker stop \$containers
            else
              echo 'No running containers to stop.'
            fi

            sudo docker container prune -f
            sudo docker image prune -af
            sudo docker network prune -f

            volumes=\$(docker volume ls -q)
            if [ -n \"\$volumes\" ]; then
              echo 'Removing all Docker volumes...'
              docker volume rm \$volumes
            else
              echo 'No Docker volumes to remove.'
            fi
          "

      - name: Sync app folder to Azure VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VM_HOST }} "mkdir -p /home/snir1551/week8summery/app"
          rsync -az --delete --exclude='.git' --exclude='node_modules' -e "ssh -i key.pem -o StrictHostKeyChecking=no" ./week8/week8_summery/app/ ${{ secrets.VM_HOST }}:/home/snir1551/week8summery/app/

      - name: Deploy with Docker Compose
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VM_HOST }} "
            cd /home/snir1551/week8summery/app &&
            sudo docker-compose down --remove-orphans &&
            sudo docker-compose up -d --build
          "

      - name: HTTP Healthcheck
        run: |
          echo "Verifying web app is reachable..."
          curl -fsSL http://${{ secrets.VM_PUBLIC_IP }}:3000 || {
            echo 'Web app is not responding on port 3000!'
            exit 1
          }

      - name: Logs from Azure VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.VM_HOST }} "
            cd /home/snir1551/week8summery/app
            sudo docker-compose ps
            sudo docker-compose logs --tail=50
          " > remote_logs.txt

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: remote-logs
          path: remote_logs.txt

      - name: Cleanup SSH key
        run: rm key.pem

      - name: Cleanup .env file
        if: always()
        run: rm -f week8/week8_summery/app/.env
